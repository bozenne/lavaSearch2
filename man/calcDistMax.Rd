% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcDistMax.R
\name{calcDistMax}
\alias{calcDistMax}
\title{Adjust the p.values using the quantiles of the max statistic}
\usage{
calcDistMax(link, statistic, iid, seqIID, seqSelected, seqQuantile, df, method,
  alpha, ncpus, initCpus, n.sim, trace, n.repMax = 100)
}
\arguments{
\item{link}{the name of the coefficients to test.}

\item{statistic}{the observed statistic relative to the coefficients to test.}

\item{iid}{zero-mean iid decomposition of the observed coefficients used to compute the statistic.}

\item{seqIID}{zero-mean iid decomposition of the tests to condition on.}

\item{seqSelected}{the vector of coefficients that have already been selected.}

\item{seqQuantile}{critical threshold of the tests to condition on.
If not \code{NULL} the values should correspond the variable in to the first column(s) of the argument iid.}

\item{df}{the degree of freedom for the t statistic.}

\item{method}{the method used to compute the p.values. Can be \code{"integration"}, \code{"boot-wild"}, or \code{"boot-norm"}.
See the detail section.}

\item{alpha}{the significance threshold for retaining a new link}

\item{ncpus}{the number of cpu to use for parellel computations}

\item{initCpus}{should the cpus be initialized.}

\item{n.sim}{the total number of simulations.}

\item{trace}{should the execution of the function be traced.}

\item{n.repMax}{the maximum number of rejection when using "\code{"boot-wild"} or \code{"boot-norm"}.}
}
\description{
Adjust the p.values using the quantiles of the max statistic.
}
\examples{
library(mvtnorm)

set.seed(10)
n <- 100
p <- 5
link <- letters[1:p]

X.iid <- rmvnorm(n, mean = rep(0,p), sigma = diag(1,p))
colnames(X.iid) <- link
statistic <- setNames(1:p,link)


\dontrun{
 n.sim <- 1e3
}
\dontshow{
 n.sim <- 10
}

r1 <- calcDistMax(link, statistic = statistic, iid = X.iid, 
            seqIID = NULL, seqQuantile =  NULL, method = "integration",
            trace = FALSE, alpha = 0.05, ncpus = 1, initCpus = TRUE, df = 1e6)

r2 <- calcDistMax(link, statistic = statistic, iid = X.iid,
            seqIID = NULL, seqQuantile =  NULL, method = "boot-wild",
            trace = FALSE, alpha = 0.05, ncpus = 1, initCpus = TRUE, n.sim = n.sim, df = 1e6)

r3 <- calcDistMax(link, statistic = statistic, iid = X.iid,
            seqIID = NULL, seqQuantile =  NULL, method = "boot-norm",
            trace = FALSE, alpha = 0.05, ncpus = 1, initCpus = TRUE, n.sim = n.sim, df = 1e6)

r4 <- calcDistMax(link, statistic = statistic, iid = X.iid,
            seqIID = NULL, seqQuantile =  NULL, method = "bootstrap",
            trace = FALSE, alpha = 0.05, ncpus = 1, initCpus = TRUE, n.sim = n.sim, df = 1e6)

rbind(integration = c(r1$p.adjust, quantile = r1$z),
      bootWild    = c(r2$p.adjust, quantile = r2$z),
      bootNorm    = c(r3$p.adjust, quantile = r3$z),
      boostrap    = c(r4$p.adjust, quantile = r4$z))

}
