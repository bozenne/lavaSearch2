% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractData.R
\name{extractData}
\alias{extractData}
\title{Extract data from a model}
\usage{
extractData(object, model.frame = FALSE, convert2dt = TRUE)
}
\arguments{
\item{object}{the fitted model.}

\item{model.frame}{should the data be extracted after transformation (e.g. using model frame)
or should the original dataset be extracted.}

\item{convert2dt}{should the object containing the data be converted into a data.table?}
}
\description{
Extract data from a model using \code{nlme::getData}, \code{riskRegression::coxDesign} or \code{model.frame}.. 
If it fails it will try to extract it by its name according to \code{model$call$data}.
}
\examples{
set.seed(10)
n <- 101

#### linear regression ####
Y1 <- rnorm(n, mean = 0)
Y2 <- rnorm(n, mean = 0.3)
Id <- findInterval(runif(n), seq(0.1,1,0.1))
df <- rbind(data.frame(Y=Y1,G="1",Id = Id),
           data.frame(Y=Y2,G="2",Id = Id)
           )
m.lm <- lm(Y ~ G, data = df)
extractData(m.lm, model.frame = TRUE)
extractData(m.lm, model.frame = FALSE)

library(nlme)
m.gls <- gls(Y ~ G, weights = varIdent(form = ~ 1|Id), data = df)
extractData(m.gls)
m.lme <- lme(Y ~ G, random = ~ 1|Id, data = df)
extractData(m.lme)

library(lava)
e <- estimate(lvm(Y ~ G), data = df)
extractData(e)
extractData(e, model.frame = TRUE)

#### survival ####
library(riskRegression)
library(survival)
dt.surv <- sampleData(n, outcome = "survival")
m.cox <- coxph(Surv(time, event) ~ X1 + X2, data = dt.surv, x = TRUE, y = TRUE)
extractData(m.cox, model.frame = FALSE)
extractData(m.cox, model.frame = TRUE)
m.cox <- coxph(Surv(time, event) ~ strata(X1) + X2, data = dt.surv, x = TRUE, y = TRUE)
extractData(m.cox, model.frame = TRUE)

#### nested fuuctions ####
fct1 <- function(m){
   fct2(m)
}
fct2 <- function(m){ 
   extractData(m)
}
fct1(m.gls)
}
